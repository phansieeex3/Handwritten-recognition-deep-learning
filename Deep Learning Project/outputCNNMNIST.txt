 model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2), dim_ordering="th"))
2018-08-03 15:07:10.385975: I T:\src\github\tensorflow\tensorflow\core\platform\cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
C:\Users\Phansa Chaonpoj\source\repos\Handwritten-Digit-Recognition-using-Deep-Learning\CNN_Keras\cnn\neural_network.py:22: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(50, (5, 5), padding="same")`
  model.add(Conv2D(50, 5, 5, border_mode="same"))
C:\Users\Phansa Chaonpoj\source\repos\Handwritten-Digit-Recognition-using-Deep-Learning\CNN_Keras\cnn\neural_network.py:24: UserWarning: Update your `MaxPooling2D` call to the Keras 2 API: `MaxPooling2D(data_format="channels_first", pool_size=(2, 2), strides=(2, 2))`
  model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2), dim_ordering="th"))
C:\Users\Phansa Chaonpoj\source\repos\Handwritten-Digit-Recognition-using-Deep-Learning\CNN_Keras\cnn\neural_network.py:28: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(100, (5, 5), padding="same")`
  model.add(Conv2D(100, 5, 5, border_mode="same"))
C:\Users\Phansa Chaonpoj\source\repos\Handwritten-Digit-Recognition-using-Deep-Learning\CNN_Keras\cnn\neural_network.py:30: UserWarning: Update your `MaxPooling2D` call to the Keras 2 API: `MaxPooling2D(data_format="channels_first", pool_size=(2, 2), strides=(2, 2))`
  model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2), dim_ordering="th"))

Training the Model...
Epoch 1/20
63000/63000 [==============================] - 280s 4ms/step - loss: 0.9776 - acc: 0.6745
Epoch 2/20
63000/63000 [==============================] - 276s 4ms/step - loss: 0.1775 - acc: 0.9454
Epoch 3/20
63000/63000 [==============================] - 277s 4ms/step - loss: 0.1157 - acc: 0.9639
Epoch 4/20
63000/63000 [==============================] - 279s 4ms/step - loss: 0.0900 - acc: 0.9720
Epoch 5/20
63000/63000 [==============================] - 281s 4ms/step - loss: 0.0755 - acc: 0.9764
Epoch 6/20
63000/63000 [==============================] - 281s 4ms/step - loss: 0.0657 - acc: 0.9791
Epoch 7/20
63000/63000 [==============================] - 279s 4ms/step - loss: 0.0592 - acc: 0.9814
Epoch 8/20
63000/63000 [==============================] - 277s 4ms/step - loss: 0.0517 - acc: 0.9833
Epoch 9/20
63000/63000 [==============================] - 276s 4ms/step - loss: 0.0464 - acc: 0.9851
Epoch 10/20
63000/63000 [==============================] - 276s 4ms/step - loss: 0.0416 - acc: 0.9873
Epoch 11/20
63000/63000 [==============================] - 277s 4ms/step - loss: 0.0387 - acc: 0.9878
Epoch 12/20
63000/63000 [==============================] - 276s 4ms/step - loss: 0.0358 - acc: 0.9884
Epoch 13/20
63000/63000 [==============================] - 266s 4ms/step - loss: 0.0316 - acc: 0.9895
Epoch 14/20
63000/63000 [==============================] - 273s 4ms/step - loss: 0.0298 - acc: 0.9903
Epoch 15/20
63000/63000 [==============================] - 268s 4ms/step - loss: 0.0271 - acc: 0.9913
Epoch 16/20
63000/63000 [==============================] - 274s 4ms/step - loss: 0.0251 - acc: 0.9917
Epoch 17/20
63000/63000 [==============================] - 269s 4ms/step - loss: 0.0225 - acc: 0.9930
Epoch 18/20
63000/63000 [==============================] - 274s 4ms/step - loss: 0.0214 - acc: 0.9930
Epoch 19/20
63000/63000 [==============================] - 270s 4ms/step - loss: 0.0198 - acc: 0.9935
Epoch 20/20
63000/63000 [==============================] - 270s 4ms/step - loss: 0.0185 - acc: 0.9938
Evaluating Accuracy and Loss Function...
7000/7000 [==============================] - 1s 155us/step
Accuracy of Model: 98.43%
Predicted Label: 4, Actual Value: 4
